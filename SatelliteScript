using UnityEngine;
using System.Collections;

public class SatelliteScript : MonoBehaviour {

	public float health;
	public Sprite[] stateMat;     // 0 = Enemy | 1 = Weak | 2 = Ally;
	public int _state;              // 0 = Enemy | 1 = Weak | 2 = Ally;
	public bool busy;
	public bool atkDone;

	[HideInInspector]
	public Vector3 _origin;
	private Vector3 _target;
	private float _speed;
	private bool goTrue;

	public float ForceBump = 5;


	//Coroutine hit;


	void Start ()
	{
		//health = 0.75F;
		//Debug.Log (health);

		busy = false;
		atkDone = false;
		goTrue = false;
		//transform.localScale = new Vector3(health, health, 1f);

		//CheckPlayerSize();

	}

	void Update ()
	{
		//Debug.Log (MANAGER.PlayerSize);
		if (busy) // en cours d'attaque
		{
			if (goTrue) //Se déplace vers le point cliqué
			{
				transform.position = transform.position + ((_target - transform.position).normalized * _speed * Time.deltaTime);
				if ((_target - transform.position).magnitude < 0.25f)
				{
					goTrue = false;
					gameObject.layer = 11;
					tag = "Weak";

					//Permet de garder une trace de la coroutine pour pouvoir l'arrêter
					//hit = StartCoroutine (CheckHit());
					Invoke("CheckHit",5);

				}
			}
			else if(atkDone)// revient vers le player
			{
				transform.position = transform.position + ((_origin - transform.position).normalized * _speed * Time.deltaTime);
				if ((_origin - transform.position).magnitude < 2)
				{
					GameObject.Find ("SatManager").GetComponent<SatelliteManager>().ListFollowers.Add(transform);
					GameObject.Find ("SatManager").GetComponent<SatelliteManager>().ListBusy.Add(false);
					CancelInvoke();
					busy = false;
					atkDone = false;
					gameObject.layer = 10;
					//Debug.Log("Busy False");
				}
			}


		}
	}

	/*
	IEnumerator CheckHit(){
		yield return new WaitForSeconds(5);

		Destroy (this.gameObject);

	}
	*/
	void CheckHit(){
	
		Destroy (this.gameObject);
	
	}

	void OnCollisionEnter2D(Collision2D other)
	{
		if ((other.gameObject.tag == "Enemy" || other.gameObject.tag == "Weak") && tag == "Satellite")
		{
			if(!atkDone && busy)
			{
				Debug.Log ("touché");
				other.transform.GetComponent<SatelliteScript>().ChangeHealth(-0.25F);
				atkDone = true;
				//StopCoroutine (hit);


			}
		}

		if (other.gameObject.tag == "Enemy" && tag == "Enemy")
		{
			Vector2 value = new Vector2(transform.position.x - other.transform.position.x, transform.position.y - other.transform.position.y);
			GetComponent<Rigidbody2D>().AddForce(value * ForceBump, ForceMode2D.Impulse);
			//print("Collision Satelite => enemy");
		}

	}

	public void CheckPlayerSize()
	{
		Debug.Log ("Player = " + MANAGER.PlayerSize);
		Debug.Log ("Sat = " + health);
		Debug.Log (health < MANAGER.PlayerSize);
		if (health < MANAGER.PlayerSize)
		{
			Debug.Log ("Entre");
			ChangeState(1);
			gameObject.layer = 12;
		}

		else if (health >= MANAGER.PlayerSize && tag != "Satellite") 
		{
			ChangeState (0);
			gameObject.layer = 12;
		}
	}

	public void ChangeHealth(float value)
	{
		/*if (health == 5)
		{
			gameObject.SetActive(false);
		} */
		health += value;
		transform.localScale += new Vector3(value, value, 0.1f);
		CheckPlayerSize();
	}

	public void ChangeState(int newState)
	{
		_state = newState;
		GetComponent<SpriteRenderer>().sprite = stateMat[_state];
		if (_state == 0)
		{
			tag = "Enemy";
		}
		if (_state == 1)
		{
			tag = "Weak";
		}
		if (_state == 2)
		{
			tag = "Satellite";
			//StopCoroutine (hit);
			CancelInvoke();
		}
		//tag = UnityEditorInternal.InternalEditorUtility.tags[7+_state];
		if(_state == 2)
		{
			busy = false;
			atkDone = false;
		}
	}

	public void Attack(Vector3 target, float speed)
	{
		busy = true;
		goTrue = true;
		gameObject.layer = 13;
		_target = target;
		_speed = speed;
	}
}
